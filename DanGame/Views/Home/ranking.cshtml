@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@model DanGame.Models.GameViewModel

<style>
    .selected-item {
        color: white;
    }
</style>

<body class="area">
    <ul class="circles">
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
        <li></li>
    </ul>

    <br>
    <br>
    <br>
    <br>

    <div class="container">
        <h2 class="text-center"
            style="width: 150px; margin: 20px; background: linear-gradient(to right, #e9b6e9, #d885ec, #bf91f0); border-radius: 10px; padding: 4px; color: white;">
            排行榜
        </h2>
        <div class="mx-3 mt-3 mb-4 mt-4">
            <div class="border rounded"
                 style="width: 100%; height: 130px; background-color: rgb(202, 202, 202, 0.3    );">
                <div>
                    <dl class="d-flex">
                        <dt style="margin: 10px;">已選</dt>
                        <dd class="selected-item" style="margin: 10px;"></dd>
                        <dd style="margin: 10px;">
                            <a href="" class="reset"
                               style="text-decoration: none; color: black;">重置</a>
                        </dd>
                    </dl>
                    <dl class="d-flex">
                        <dt style="margin: 10px;">類別</dt>
                        @foreach (var tag in Model)
                        {
                            <dd style="margin: 10px;">
                                <a href="#" class="list-group-item">@tag.TagName</a>
                            </dd>
                        }
                    </dl>
                </div>
            </div>
        </div>

        <div class="card mb-3 z-0 mx-3 mt-4 mb-4 modal_div_box">
            <div class="row g-0">
                <div class="col-md-4">
                    <img src="@Model.AppDetail.HeaderImage"
                         class="img-fluid rounded-start" alt="...">
                </div>
                <div class="col-md-8">
                    <div class="card-body" style="padding: 10px 10px 0 10px;">
                        <h4 class="card-title mx-2">@Model.AppDetail.AppName</h4>
                        <div style="position: absolute; top: 15px; right: 50px; font-size: 15px;"> 下載次數 : @Model.AppDetail.Downloaded</div>
                        <div class="mb-3 mx-2">
                            <p class="card-text border rounded">
                                @Model.AppDetail.ShortDescription
                            </p>
                        </div>
                        <div class="d-flex">
                            <div>
                                <p class="card-text">
                                    <small class="text-body-secondary border rounded-pill"
                                           style="padding: 5px 15px; background-color: rgb(226, 226, 226);">@Model.GenreTag.TagName</small>
                                </p>
                            </div>
                        </div>
                        <div class="mt-3" style="position: absolute; bottom: 9%; left: 35%; font-size: 12px;"> 上架日期 : @Model.AppDetail.ReleaseDate</div>
                        <div class="text-end">
                            <button class="btn btn-outline-primary" style="margin: 0 20px; position: absolute; bottom: 9%; right: 2%;">詳細資訊</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="text-center" style="margin-bottom: 50px;">
            <button class="btn btn-outline-light"
                    style="font-size: 20px;">
                查看更多
            </button>
        </div>


    </div>
    <script src="~/lib/jquery/dist/jquery-3.7.1.min.js"></script>
    <script>
        $(document).ready(function () {
            let selectedItems = [];
            const maxSelection = 5;

            $("dl.d-flex dd a.list-group-item").click(function (e) {
                e.preventDefault();
                let selectedText = $(this).text();

                if (!selectedItems.includes(selectedText)) {
                    if (selectedItems.length < maxSelection) {
                        selectedItems.push(selectedText);
                        $(".selected-item").text(selectedItems.join(", "));
                    } else {
                        alert("最多只能選擇5個類別");
                    }
                }
            });

            $(".reset").click(function (e) {
                e.preventDefault();
                selectedItems = [];
                $(".selected-item").text("");
            });

            var tagLinks = document.querySelectorAll(".list-group-item");

            // 为每个标签链接添加点击事件处理程序
            tagLinks.forEach(function (link) {
                link.addEventListener("click", function (event) {
                    event.preventDefault(); // 阻止默认链接行为

                    var selectedTag = link.innerText.trim(); // 获取点击的标签文本
                    updateModal(selectedTag); // 更新模态框内容
                });
            });

            // 更新模态框内容的函数
            function updateModal(selectedTag) {
                // 根据标签更新模态框内容，这里需要根据具体需求来实现
                // 你可以使用 AJAX 请求从服务器获取相关数据，然后更新模态框内容
                // 这里只是一个简单的示例，你可以根据实际情况进行修改
                var modalTitle = document.querySelector(".modal_div_box .card-title");
                var modalDescription = document.querySelector(".modal_div_box .card-text");

                // 示例：将选定的标签作为标题显示在模态框中
                modalTitle.innerText = selectedTag;

                // 示例：将选定的标签作为描述显示在模态框中
                modalDescription.innerText = "您选择了标签：" + selectedTag;
            }
        });

        function getAppsByTag(tagName) {
            // 发送 POST 请求
            $.ajax({
                url: "/GetAppByTags", // 控制器的路由地址
                type: "POST",
                contentType: "application/json",
                data: JSON.stringify(tagName), // 将标签名作为 JSON 数据发送
                success: function (data) {
                    // 请求成功后的处理逻辑
                    console.log("请求成功:", data);
                },
                error: function (xhr, status, error) {
                    // 请求失败后的处理逻辑
                    console.error("请求失败:", error);
                }
            });
        }
    </script>
</body>